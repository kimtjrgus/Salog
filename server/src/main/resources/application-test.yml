spring:
  profiles: test
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:test
  sql:
    init:
      data-locations: classpath*:db/h2/
      mode: always
  jpa:
    hibernate:
      ddl-auto: create  # 스키마 자동 생성 (드랍-생성) -> 테스트 환경에서만 적용할 것
    show-sql: true      # SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        color-codes: true
        use_sql_comments: true
    defer-datasource-initialization: true  # 데이터 소스 초기화 지연 설정
  #    open-in-view: true
  output:
    ansi:
      enabled: ALWAYS
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            redirect-uri: ${OAUTH_GOOGLE_REDIRECT_URI}
            scope:
              - email
email:
  sender:
    man: ${EMAIL}
    password: ${EMAIL_PASSWORD}
logging:
  level:
    org:
      springframework:
        security: DEBUG
      hibernate:
        #        SQL: debug           # jpa 설정에서 쿼리를 보여주므로 필요 없음.
        type:
          descriptor:
            sql:
              BasicBinder: trace
jwt:
  key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 1440
naver:
  ocr:
    key: ${NAVER_OCR_SECRET}
    url: ${NAVER_OCR_URL}

# 모니터링
management:
  endpoints:
    web:
      exposure:
        include: "prometheus"
  metrics:
    enabled: true
  prometheus:
    enabled: true
