# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Set up Gradle permissions
        run: |
          cd ./server/
          chmod +x ./gradlew

      - name: Run tests
        env:
          SPRING_PROFILES_ACTIVE: test
          AWS_RDS_URL: ${{ secrets.AWS_RDS_URL }}
          AWS_RDS_PASSWORD: ${{ secrets.AWS_RDS_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          OAUTH_GOOGLE_CLIENT_ID: ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
          OAUTH_GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }}
          OAUTH_GOOGLE_REDIRECT_URI: ${{ secrets.OAUTH_GOOGLE_REDIRECT_URI }}
          NAVER_OCR_SECRET: ${{ secrets.NAVER_OCR_SECRET }}
          NAVER_OCR_URL: ${{ secrets.NAVER_OCR_URL }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        run: |
          cd ./server/
          ./gradlew clean test -i

      - name: Build with Gradle
        env:
          SPRING_PROFILES_ACTIVE: deploy
          AWS_RDS_URL: ${{ secrets.AWS_RDS_URL }}
          AWS_RDS_PASSWORD: ${{ secrets.AWS_RDS_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          OAUTH_GOOGLE_CLIENT_ID: ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
          OAUTH_GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }}
          OAUTH_GOOGLE_REDIRECT_URI: ${{ secrets.OAUTH_GOOGLE_REDIRECT_URI }}
          NAVER_OCR_SECRET: ${{ secrets.NAVER_OCR_SECRET }}
          NAVER_OCR_URL: ${{ secrets.NAVER_OCR_URL }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        run: |
          cd ./server/
          ./gradlew clean build -x test -x memberTest -x incomeTest -x fixedIncomeTest -x budgetTest
          
      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -f ./server/Dockerfile -t ${{ secrets.DOCKER_REPO }}/salog .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_REPO }}/salog

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ec2-user
          key: ${{ secrets.KEY }}
          script: |
            docker rm -f $(docker ps -aq)
            docker pull ${{ secrets.DOCKER_REPO }}/salog
            docker run -e SPRING_PROFILES_ACTIVE=deploy -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} -e EMAIL=${{ secrets.EMAIL }} -e EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} -e AWS_RDS_URL=${{ secrets.AWS_RDS_URL }} -e AWS_RDS_PASSWORD=${{ secrets.AWS_RDS_PASSWORD }} -e OAUTH_GOOGLE_CLIENT_ID=${{secrets.OAUTH_GOOGLE_CLIENT_ID}} -e OAUTH_GOOGLE_CLIENT_SECRET=${{secrets.OAUTH_GOOGLE_CLIENT_SECRET}} -e OAUTH_GOOGLE_REDIRECT_URI=${{secrets.OAUTH_GOOGLE_REDIRECT_URI}} -e NAVER_OCR_SECRET=${{secrets.NAVER_OCR_SECRET}} -e NAVER_OCR_URL=${{secrets.NAVER_OCR_URL}} -e KEY_STORE_PASSWORD=${{secrets.KEY_STORE_PASSWORD}} -v /home/ec2-user/keystore.p12:/app/keystore.p12 -d -p 443:8080 ${{ secrets.DOCKER_REPO }}/salog
            docker image prune -f
